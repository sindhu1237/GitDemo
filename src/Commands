git init
-- project level
git config user.name Sindhu.Rudraboina
git config user.email sindhu.rudraboina@gmail.com
git config user.name
git config user.email

-- globally for entire system
git config -g user.name Sindhu.Rudraboina
git config -g user.email sindhu.rudraboina@gmail.com

git status

--branching
git branch --> shows current branch + available branches
git branch <branchName> engineSizeComparator  --> creates new branch

git checkout <branchNAme> engineSizeComparator  --> moving from one branch to another branch(engineSizeComparator)

To merge a branch on current branch
git merge <branchName>

master  ->  Feature branch
git checkout -b <branchName> || creates the branch and move to the new branch

We can connect our local git repo to multiple remote repos
In general its only 1 remote repo per local repo

"name of remote repo[key]"  ->  "link"

key -> origin


--git remote
git remote add origin <link>
git remote add <key> <link>
git push origin branchName --> upload

git fetch -> download
git pull -> download, update your code [ merge the remote changes into local ]

Downloading the git repo -> very first time -> git clone <link>

Task
0. fork
1. git clone -> forked repo
2. create a new feature branch
3. Add a new comparator -> maxSpeed
4. Push the new branch
5. Create a PR

Let's imagine -> remote : origin, branch : master
git push origin master
git push origin branchName

Default upstream -> git push -u origin master
default -> remote : origin, branch : master
git push [Internally, git push origin master]